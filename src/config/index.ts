const Config = {
    ENV: process.env.NODE_ENV,
    WEB_DOMAIN: 'https://18.190.95.121',
    API_URL: {
        BASE_URL: process.env.REACT_APP_API_URL,
        // STORE
        LOGIN: 'store/account/login',
        REFRESH_TOKEN: 'store/account/refreshtoken',
        LOGOUT: 'store/account/logout',
        LIST_ACCOUNT: 'store/user',
        DETAIL_ACCOUNT: (id: number) => `store/account/${id}`,
        GET_TABLE: (tableId: number) => `store/table-order/${tableId}`,
        ADD_TABLE: 'store/table-order',
        EDIT_TABLE: 'store/table-order',
        DELETE_TABLE: (tableId: number) => `store/table-order/${tableId}`,
        LIST_TABLE: 'store/transaction/list-table',
        ADD_USER: 'store/user/add-account',
        CHECK_EXISTED_EMAIL: 'store/user/check-existed-email',
	    USER: 'store/user',
        TRANSACTION_DETAIL: (transactionId: number) => `store/transaction/detail/${transactionId}`,
        GET_USER: (userId: string) => `store/user/${userId}`,
        GET_CART: (orderId: number) => `store/order/cart-information/${orderId}`,
        CHANGE_AMOUNT_PRODUCT_ORDER: 'store/order/change-amount-product-order',
        STORE_SETTING: 'store/store',
        ORDER_PRODUCT_DETAIL: (productId: number) => `store/order/product-order-detail/${productId}`,
        GET_ORDER_LIST: 'store/order/',
        CHANGE_STATUS_ORDER: 'store/order/change-status-order',
        TABLE_SETTING: 'store/table-order/all',
        RESET_CART: 'store/order/reset-cart',
        ISSUANCE_TRANSACTION: (tableId: number) => `store/transaction/issuance/${tableId}`,
        LIST_PRODUCT: 'store/product/all',
        LIST_CATEGORY: 'store/master-data/category/all',
        ADD_CATEGORY: 'store/master-data/category/add',
        DETAIL_PRODUCT: (productId: number) => `store/product/${productId}`,
        GET_IMAGE: process.env.REACT_APP_API_URL + 'store/file/image/',
        COMFIRM_ORDER: 'store/order/confirm-order',
        PAYMENT_CASHIER_DETAIL: (transactionId: number) => `store/transaction/payment-counter/${transactionId}`,
        PAYMENT_CASHIER: 'store/payment/payment',
        SELECT_PRODUCT: (transactionId: number, orderId: number) => `store/product/order/${transactionId}/${orderId}`,
        ADD_PRODUCT_TO_CART: 'store/order/add-product-to-cart',
        EDIT_PRODUCT: 'store/product',
        ADD_PRODUCT: 'store/product',
        DELETE_PRODUCT: (productId: number) => `store/product/${productId}`,
        GRAPH_ANALYSIS: 'store/revenue-analysis/graph',
        TABLE_ANALYSIS: 'store/revenue-analysis/table',
        REVENUE_ANALYSIS: 'store/revenue-analysis',
        DATE_REVENUE: 'store/revenue-analysis/date-revenue',
        DELETE_ACCOUNT: (userId: string) => `store/user/${userId}`,
        VALIDATE_EMAIL_TOKEN: 'store/account/token/validate',
        RESET_PASSWORD: 'store/account/resetpassword',
        FORGOT_PASSWORD: 'store/account/forgotpassword',
        NOTIFICATION_LIST: 'store/notification',
        GET_DESIGN: 'store/setting/get-design',
        SET_DESIGN: 'store/setting/set-design',
        GET_PAYMENT: 'store/setting/get-payment',
        SET_PAYMENT: 'store/setting/set-payment',
        NOTIFICATION_DETAIL: (notificationId: number) => `store/notification/${notificationId}`,
        EDIT_NOTIFICATION: 'store/notification',
        GET_STORE_ROLES: 'store/user/store-roles',
        CHANGE_PASSWORD: 'store/account/changepassword',
        GET_STORE_LOGO: 'store/store/logo',
        GET_SEAT_LIST: (transactionId: number) => `store/order/seat-list/${transactionId}`,
        ADD_NOTIFICATION: 'store/notification',
        EDIT_STORE: 'store/store',
        GET_SEAT: 'store/setting/get-seat',
        SET_SEAT: 'store/setting/set-seat',
        DELETE_ORDER: (orderId: number) => `store/order/${orderId}`,
        GET_PRODUCT_REVENUE_INFO: (productId: number) => `store/product/revenue/info/${productId}`,
        GET_PRODUCT_REVENUE_RANKING: (productId: number) => `store/product/revenue/ranking/${productId}`,
        GET_PRODUCT_REVENUE_SALES: (productId: number) => `store/product/revenue/sales/${productId}`,
        GET_NOTIFICATION_LIST: 'store/store/notification-list',
        GET_LANGUAGE: 'store/store/language',
        CHECK_EXISTED_PRODUCT_NAME: 'store/product/check-existed-product-name',
        IS_INVALID_PAYMENT: 'store/transaction/isInValid-payment',
        IS_HAS_ORDER_CART: 'store/transaction/isHasOrder-cart',
        IS_HAS_ALL_CANCELLED: 'store/transaction/is-has-all-canceled',
        NOTIFICATIONS_USER_LIST: 'store/notification/notifications-user',
        DELETE_NOTIFICATION_USER: (notificationId: number) => `store/notification/${notificationId}`,
        ADD_NOTIFICATION_USER: 'store/notification/add-notification-user',
        CHANGE_PASSWORD_STAFF: 'store/account/change-password-staff',
        EDIT_NOTIFICATION_USER: 'store/notification/edit-notification-user',
        GET_NOTIFICATION_USER_BY_ID: (notificationId: number) => `store/notification/notification-user/${notificationId}`,
        GET_NOTIFICATION_USER_DETAIL: (notificationId: number, companyId: number) => `user/notification/${notificationId}&${companyId}`,
        CHECK_MULTIPLE_SELECTION: (productId: number, transactionId: number) => `store/order/check-multiple-selection/${productId}&${transactionId}`,
        // USERS
        GET_TRANSACTION_INFO: 'user/transaction/get-info-transaction',
        USER_SELECT_PRODUCT: (transactionId: number, orderId: number, companyId: number) => `user/product/order/${transactionId}/${orderId}/${companyId}`,
        USER_GET_CART: (orderId: number) => `user/order/cart-information/${orderId}`,
        USER_CHANGE_STATUS_ORDER:(companyId: number) =>  `user/order/change-status-order/${companyId}`,
        USER_RESET_CART: 'user/order/reset-cart',
        USER_CHANGE_AMOUNT_PRODUCT_ORDER: 'user/order/change-amount-product-order',
        USER_DELETE_ORDER: (orderId: number) => `user/order/${orderId}`,
        GET_COMANY_INFO_BY_TRANSACTION: 'user/transaction/get-info-company-by-transaction',
        GET_NOTIFICATIONS_USER_ON_TOP: 'user/notification/notifications',
        ORDER_PRODUCT_DETAIL_USER: (productId: number) => `user/order/product-order-detail/${productId}`,
        GET_SEAT_LIST_USER: (transactionId: number) => `user/order/seat-list/${transactionId}`,
        ADD_PRODUCT_TO_CART_USER:(companyId: number) => `user/order/add-product-to-cart/${companyId}`,
        GET_SEAT_USER: (companyId: number) => `user/order/get-seat/${companyId}`,
        GET_ORDER_HISTORY: (transactionId: number) => `user/transaction/${transactionId}/order-history`,
        GET_PAYMENT_DETAIL: (transactionId: number) => `user/payment/${transactionId}/payment-detail`,
        GET_PAYMENT_GATEWAYS: (companyId: number) => `user/payment/${companyId}/get-payment-gateway`,
        PAYMENT_MOMO: (companyId: number, transitionId: number) => `user/payment/${companyId}/${transitionId}/momo`,
        PAYMENT_BY_ONEPAY: `user/payment/payment-by-onepay`,
        ONE_PAY_RETURN:(companyId: number, transactionId: number, query: string) => `user/payment/${companyId}/${transactionId}/onepay-return${query}`,
        CHECK_MULTIPLE_SELECTION_USER: (productId: number, transactionId: number) => `user/order/check-multiple-selection/${productId}&${transactionId}`,
    },
     API_KEY: process.env.REACT_APP_API_KEY,
     UPLOADS_PATH: process.env.REACT_APP_UPLOAD_PATH
}

export default Config;